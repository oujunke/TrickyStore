name: Build

on:
  push:
    branches: [ "master" ]
    tags:
      - "v*"
    paths-ignore:
      - '**.md'
      - '**.txt'
      - '.github/**'
      - '!.github/workflows/**'
  pull_request:
    branches: [ "master" ]
    paths-ignore:
      - '**.md'
      - '**.txt'
      - '.github/**'
      - '!.github/workflows/**'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      attestations: write
    steps:
      - name: Check out
        uses: actions/checkout@v4
        with:
          submodules: "recursive"
          fetch-depth: 0

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21
          cache: 'gradle'

      - name: Set up ccache
        uses: hendrikmuhs/ccache-action@v1.2
        with:
          key: ccache-stable
          restore-keys: ccache-stable

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3
        with:
          packages: ''

      - name: Build with Gradle
        run: |
          ./gradlew zipRelease
          ./gradlew zipDebug

      - name: Prepare artifact
        if: success()
        id: prepareArtifact
        run: |
          releaseName=`ls module/release/Tricky-Store-v*-release.zip | awk -F '(/|.zip)' '{print $3}'` && echo "releaseName=$releaseName" >> $GITHUB_OUTPUT
          debugName=`ls module/release/Tricky-Store-v*-debug.zip | awk -F '(/|.zip)' '{print $3}'` && echo "debugName=$debugName" >> $GITHUB_OUTPUT
          unzip module/release/Tricky-Store-v*-release.zip -d module-release
          unzip module/release/Tricky-Store-v*-debug.zip -d module-debug

      - name: Upload release
        id: release
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.prepareArtifact.outputs.releaseName }}
          path: "./module-release/*"

      - name: Upload debug
        id: debug
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.prepareArtifact.outputs.debugName }}
          path: "./module-debug/*"

      - name: Attest release build provenance
        if: startsWith(github.ref, 'refs/tags/')
        uses: actions/attest-build-provenance@v2
        with:
          subject-name: ${{ steps.prepareArtifact.outputs.releaseName }}
          subject-digest: sha256:${{ steps.release.outputs.artifact-digest }}

      - name: Upload release mappings
        uses: actions/upload-artifact@v4
        with:
          name: release-mappings
          path: "./service/build/outputs/mapping/release"
